name: CI

on:
  push:
  pull_request:
  release:
    types: [published]

env:
  vcpkg_TAG: ffa7fd27cfa29f206d1fd2ccfc722cad4aaeef3d
  drake_lite_cmake_TAG: v0.18.0.0

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2019]

    steps:
    - uses: actions/checkout@v1

    - name: Check free space
      shell: bash
      run: |
        df -h

    # Workaround for https://github.community/t5/GitHub-Actions/Windows-tests-worked-yesterday-broken-today/td-p/43574
    - name: Override bash shell PATH (windows-latest)
      if: matrix.os == 'windows-2019'
      run: echo "::add-path::C:\Program Files\Git\bin"

    - name: Download custom vcpkg and additional ports [Windows]
      if: matrix.os == 'windows-2019'
      shell: bash
      run: |
        mkdir C:/blockrunner-deps
        cd C:/blockrunner-deps
        cd /c/blockrunner-deps
        git clone https://github.com/Microsoft/vcpkg
        cd vcpkg
        git checkout ${vcpkg_TAG}
        ./bootstrap-vcpkg.sh
 
    - name: Install vcpkg ports [Windows]
      if: matrix.os == 'windows-2019'
      shell: bash
      run: |
        /c/blockrunner-deps/vcpkg/vcpkg.exe install --triplet x64-windows catch2 eigen3 fmt spdlog tinyxml2 fcl sdformat9

    # Remove temporary files https://github.com/Microsoft/vcpkg/blob/master/docs/about/faq.md#how-can-i-remove-temporary-files
    # For some reason doing using git bash to do rm -rf fails for icu's port buildtrees, probably for the use of msys2
    # See https://github.com/microsoft/vcpkg/issues/10365
    - name: Cleanup vcpkg temporary directories [Windows]
      if: matrix.os == 'windows-2019'
      shell: cmd
      run: |
        RMDIR /Q/S C:\blockrunner-deps\vcpkg\buildtrees
        RMDIR /Q/S C:\blockrunner-deps\vcpkg\packages
        RMDIR /Q/S C:\blockrunner-deps\vcpkg\downloads
        
    - name: Install drake-lite-cmake [Windows]
      if: matrix.os == 'windows-2019'
      shell: bash
      run: |
        git clone https://github.com/traversaro/drake-lite-cmake
        cd drake-lite-cmake
        mkdir build
        cd build
        cmake -T "ClangCl" -DCMAKE_INSTALL_PREFIX=/c/blockrunner-deps/vcpkg/installed/x64-windows ..
        cmake --build . --target ALL_BUILD --config Debug
        cmake --build . --target INSTALL --config Debug
        cmake --build . --target ALL_BUILD --config Release
        cmake --build . --target INSTALL --config Release
        cd ..
        cd ..
        rm -rf drake-lite-cmake
  
    - name: Prepare release file [Windows]
      if: (github.event_name == 'release' &&  matrix.os == 'windows-2019')
      shell: cmd
      run: |
        7z a blockrunner-deps-x64-windows.zip C:\blockrunner-deps

    - name: Upload Release Asset [Windows]
      if: (github.event_name == 'release' &&  matrix.os == 'windows-2019')
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./blockrunner-deps-x64-windows.zip
          asset_name: blockrunner-deps-x64-windows.zip
          asset_content_type: application/zip
